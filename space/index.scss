$rotationDuration: 32000;
$ballCount: 12;
$rotationFollowDuration: $rotationDuration / $ballCount;

body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  overflow: hidden;
  perspective: 600px;
  background-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/6043/css_globe_bg.jpg);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

.bank {
  transform-style: preserve-3d;
  transform: rotateX(-25deg);
}

.bank-follow {
  transform-style: preserve-3d;
  transform: rotateX(25deg);
}

.move {
  transform-style: preserve-3d;
  transform: translateZ(350px);
}

.rotation {
  position: absolute;
  top: -50px;
  left: -50px;
  transform-style: preserve-3d;
  animation: rotationY #{$rotationDuration}ms linear infinite;
}

.rotation-follow {
  transform-style: preserve-3d;
  animation: rotationY #{$rotationDuration}ms linear infinite reverse;
}

@keyframes rotationY {
  0% {
    transform: rotateY(0deg);
  }

  100% {
    transform: rotateY(360deg);
  }
}

// https://sass-lang.com/documentation/at-rules/control/for
@for $i from 1 to $ballCount + 1 {
  .rotation:nth-child(#{$i}) {
    animation-delay: #{-$rotationFollowDuration * $i}ms;
  }
  .rotation:nth-child(#{$i}) .rotation-follow {
    animation-delay: #{-$rotationFollowDuration * $i}ms;
  }
  @if $i == 1 {
    .rotation:nth-child(#{$i}) .ball {
      position: relative;
      width: 100px;
      height: 100px;
      background: linear-gradient(
        0deg,
        rgb(90, 79, 19),
        rgb(136, 138, 30),
        rgb(190, 201, 43),
        rgb(214, 243, 51)
      );
      border-radius: 100%;
      box-shadow: -20px -10px 40px rgba(60, 30, 150, 0.7) inset;
    }
  }
  @if $i == 2 {
    .rotation:nth-child(#{$i}) .ball {
      position: relative;
      width: 100px;
      height: 100px;
      background: linear-gradient(
        0deg,
        rgb(21, 90, 19),
        rgb(61, 138, 30),
        rgb(43, 201, 51),
        rgb(83, 243, 51)
      );
      border-radius: 100%;
      box-shadow: -20px -10px 40px rgba(60, 30, 150, 0.7) inset;
    }
  }
  @if $i == 3 {
    .rotation:nth-child(#{$i}) .ball {
      position: relative;
      width: 100px;
      height: 100px;
      background: linear-gradient(
        0deg,
        rgb(90, 59, 19),
        rgb(138, 118, 30),
        rgb(201, 164, 43),
        rgb(243, 208, 51)
      );
      border-radius: 100%;
      box-shadow: -20px -10px 40px rgba(60, 30, 150, 0.7) inset;
    }
  }
  @if $i == 4 {
    .rotation:nth-child(#{$i}) .ball {
      position: relative;
      width: 100px;
      height: 100px;
      background: linear-gradient(
        0deg,
        rgb(90, 30, 19),
        rgb(138, 52, 30),
        rgb(201, 106, 43),
        rgb(243, 153, 51)
      );
      border-radius: 100%;
      box-shadow: -20px -10px 40px rgba(60, 30, 150, 0.7) inset;
    }
  }
  @if $i == 5 {
    .rotation:nth-child(#{$i}) .ball {
      position: relative;
      width: 100px;
      height: 100px;
      background: linear-gradient(
        0deg,
        rgb(19, 79, 90),
        rgb(30, 131, 138),
        rgb(43, 183, 201),
        rgb(51, 230, 243)
      );
      border-radius: 100%;
      box-shadow: -20px -10px 40px rgba(60, 30, 150, 0.7) inset;
    }
  }
  @if $i == 6 {
    .rotation:nth-child(#{$i}) .ball {
      position: relative;
      width: 100px;
      height: 100px;
      background: linear-gradient(
        0deg,
        rgb(19, 30, 90),
        rgb(19, 46, 138),
        rgb(43, 93, 201),
        rgb(51, 70, 243)
      );
      border-radius: 100%;
      box-shadow: -20px -10px 40px rgba(60, 30, 150, 0.7) inset;
    }
  }
  @if $i == 7 {
    .rotation:nth-child(#{$i}) .ball {
      position: relative;
      width: 100px;
      height: 100px;
      background: linear-gradient(
        0deg,
        rgb(76, 19, 90),
        rgb(118, 19, 138),
        rgb(169, 43, 201),
        rgb(237, 51, 243)
      );
      border-radius: 100%;
      box-shadow: -20px -10px 40px rgba(60, 30, 150, 0.7) inset;
    }
  }
  @if $i == 8 {
    .rotation:nth-child(#{$i}) .ball {
      position: relative;
      width: 100px;
      height: 100px;
      background: linear-gradient(
        0deg,
        rgb(90, 19, 60),
        rgb(138, 19, 112),
        rgb(201, 43, 154),
        rgb(243, 51, 179)
      );
      border-radius: 100%;
      box-shadow: -20px -10px 40px rgba(60, 30, 150, 0.7) inset;
    }
  }
  @if $i == 9 {
    .rotation:nth-child(#{$i}) .ball {
      position: relative;
      width: 100px;
      height: 100px;
      background: linear-gradient(
        0deg,
        rgb(90, 19, 23),
        rgb(138, 19, 39),
        rgb(201, 43, 43),
        rgb(243, 51, 51)
      );
      border-radius: 100%;
      box-shadow: -20px -10px 40px rgba(60, 30, 150, 0.7) inset;
    }
  }
  @if $i == 10 {
    .rotation:nth-child(#{$i}) .ball {
      position: relative;
      width: 100px;
      height: 100px;
      background: linear-gradient(
        0deg,
        rgb(19, 90, 66),
        rgb(19, 138, 98),
        rgb(43, 201, 114),
        rgb(51, 243, 179)
      );
      border-radius: 100%;
      box-shadow: -20px -10px 40px rgba(60, 30, 150, 0.7) inset;
    }
  }
  @if $i == 11 {
    .rotation:nth-child(#{$i}) .ball {
      position: relative;
      width: 100px;
      height: 100px;
      background: linear-gradient(
        0deg,
        rgb(65, 90, 19),
        rgb(57, 138, 19),
        rgb(101, 201, 43),
        rgb(121, 243, 51)
      );
      border-radius: 100%;
      box-shadow: -20px -10px 40px rgba(60, 30, 150, 0.7) inset;
    }
  }
  @if $i == 12 {
    .rotation:nth-child(#{$i}) .ball {
      position: relative;
      width: 100px;
      height: 100px;
      background: linear-gradient(
        0deg,
        rgb(90, 68, 19),
        rgb(138, 106, 19),
        rgb(201, 190, 43),
        rgb(243, 224, 51)
      );
      border-radius: 100%;
      box-shadow: -20px -10px 40px rgba(60, 30, 150, 0.7) inset;
    }
  }
  .rotation:nth-child(#{$i}) .ball::before {
    content: '';
    position: absolute;
    z-index: -1;
    top: 90px;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      0deg,
      rgba(255, 255, 255, 0) 50%,
      rgba(200, 200, 250, 0.3),
      rgba(100, 100, 150, 0.5)
    );
    border-radius: 100%;
  }
  .rotation:nth-child(#{$i}) .ball::after {
    // https://pugjs.org/language/interpolation.html
    // https://stackoverflow.com/questions/41645442/dynamically-fill-css-pseudo-element-before-content-with-angular2/41645721
    content: attr(data-hoge) '';
    position: absolute;
    top: 50%;
    left: 50%;
    font-size: 3rem;
    color: #ffffff;
    transform: translateZ(-350px); // 内向きにするのが味噌
    width: 100%;
    height: 100%;
  }
}
